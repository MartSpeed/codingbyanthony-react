{"ast":null,"code":"var _jsxFileName = \"Q:\\\\javascript\\\\react_project\\\\react_useffect\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\n\n// function countInitial() {\n//   console.log( 'run function' )\n//   return 4\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  // const [ count, setCount ] = useState(4);\n  // // also takes a function version\n  // const [ theme, setTheme ] = useState('blue');\n\n  // function decrementCount(){\n  //   setCount( prevCount => prevCount -1 )\n  // }\n\n  // function incrementCount(){\n  //   setCount( prevCount => prevCount + 1 )\n  //     }\n\n  // return (\n  //   <div className=\"App\">\n\n  //   <button onClick={ decrementCount }> - </button>\n  //   <span> { count } </span>\n  //   <span> { theme } </span>\n  //   <button onClick={ incrementCount }> + </button>\n  //   </div>\n  // );\n\n  const [resourceType, setResourceType] = useState('posts');\n  const [items, setItems] = useState([]);\n  useEffect(() => {\n    // everything inside of this callback function will be called everytime the program renders\n    fetch(`https://jsonplaceholder.typicode.com/${resourceType}`).then(response => response.json()).then(json => setItems(json));\n  }, [resourceType]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setResourceType('posts'),\n      children: \" Post \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setResourceType('users'),\n      children: \" User \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setResourceType('comments'),\n      children: \" Comments \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\" \", resourceType, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"OSQQC9peKRYbv59z3HETIMuMjQo=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","App","resourceType","setResourceType","items","setItems","fetch","then","response","json"],"sources":["Q:/javascript/react_project/react_useffect/src/App.js"],"sourcesContent":["import './App.css';\r\nimport React, { useState, useEffect } from 'react'\r\n\r\n// function countInitial() {\r\n//   console.log( 'run function' )\r\n//   return 4\r\n// }\r\n\r\nexport default function App() {\r\n  // const [ count, setCount ] = useState(4);\r\n  // // also takes a function version\r\n  // const [ theme, setTheme ] = useState('blue');\r\n\r\n  // function decrementCount(){\r\n  //   setCount( prevCount => prevCount -1 )\r\n  // }\r\n\r\n  // function incrementCount(){\r\n  //   setCount( prevCount => prevCount + 1 )\r\n  //     }\r\n\r\n  // return (\r\n  //   <div className=\"App\">\r\n\r\n  //   <button onClick={ decrementCount }> - </button>\r\n  //   <span> { count } </span>\r\n  //   <span> { theme } </span>\r\n  //   <button onClick={ incrementCount }> + </button>\r\n  //   </div>\r\n  // );\r\n\r\nconst [ resourceType, setResourceType ] = useState('posts')\r\nconst [ items, setItems ] = useState([])\r\n\r\nuseEffect(() => {\r\n  // everything inside of this callback function will be called everytime the program renders\r\n  fetch(`https://jsonplaceholder.typicode.com/${resourceType}`)\r\n    .then(response => response.json())\r\n    .then(json => setItems(json))\r\n}, [resourceType])\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={() => setResourceType('posts')}> Post </button>\r\n      <button onClick={() => setResourceType('users')}> User </button>\r\n      <button onClick={() => setResourceType('comments')}> Comments </button>\r\n      <h1> { resourceType } </h1>\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAElD;AACA;AACA;AACA;AAAA;AAEA,eAAe,SAASC,GAAG,GAAG;EAAA;EAC5B;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEF,MAAM,CAAEC,YAAY,EAAEC,eAAe,CAAE,GAAGJ,QAAQ,CAAC,OAAO,CAAC;EAC3D,MAAM,CAAEK,KAAK,EAAEC,QAAQ,CAAE,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd;IACAM,KAAK,CAAE,wCAAuCJ,YAAa,EAAC,CAAC,CAC1DK,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACE,IAAI,IAAIJ,QAAQ,CAACI,IAAI,CAAC,CAAC;EACjC,CAAC,EAAE,CAACP,YAAY,CAAC,CAAC;EAEhB,oBACE;IAAA,wBACE;MAAQ,OAAO,EAAE,MAAMC,eAAe,CAAC,OAAO,CAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAgB,eAChE;MAAQ,OAAO,EAAE,MAAMA,eAAe,CAAC,OAAO,CAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAgB,eAChE;MAAQ,OAAO,EAAE,MAAMA,eAAe,CAAC,UAAU,CAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAoB,eACvE;MAAA,gBAAOD,YAAY;IAAA;MAAA;MAAA;MAAA;IAAA,QAAQ;EAAA;IAAA;IAAA;IAAA;EAAA,QACvB;AAEV;AAAC,GAzCuBD,GAAG;AAAA,KAAHA,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}